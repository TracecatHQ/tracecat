title: Redirect Datadog SIEM signals to Slack with user tagging
description: |
  Pulls Datadog SIEM signals (alerts), extracts emails contains within the signal,
  finds Slack users associated with the emails, and tags the Slack users in a notification.
  Requires `datadog` and `slack` secrets.
entrypoint: pull_datadog_signals
inputs:
  dd_region: us5
  dd_api_url: https://api.us5.datadoghq.com

triggers:
  - type: webhook
    ref: datadog_siem_signals_webhook
    entrypoint: pull_datadog_siem_signals

actions:
  - ref: pull_datadog_signals
    action: integrations.datadog.siem.list_datadog_alerts
    args:
      start_time: ${{ TRIGGER.start_time }}
      end_time: ${{ TRIGGER.end_time }}
      limit: 10

  - ref: reshape_signals
    action: core.transform.forward
    depends_on:
      - pull_datadog_siem_signals
    run_if: ${{ FN.not_empty(ACTIONS.pull_datadog_siem_signals.result) }}
    for_each: ${{ for var.signal in ACTIONS.pull_datadog_siem_signals.result }}
    args:
      value:
        title: ${{ var.signal.attributes.attributes.title }}
        description: ${{ var.signal.attributes.message }}
        status: ${{ var.signal.attributes.status }}
        first_seen: ${{ var.signal.attributes.attributes.workflow.first_seen }}
        last_seen: ${{ var.signal.attributes.attributes.workflow.last_seen }}
        samples: ${{ var.signal.attributes.attributes.samples }}
        link_to_signal: ${{ INPUTS.dd_api_url }}/security?event=${{ var.signal.EventID }}

  - ref: extract_emails
    # Returns a list of list of emails per alert
    action: integrations.extraction.extract_emails
    depends_on:
      - reshape_signals
    for_each: ${{ for var.signal in ACTIONS.reshape_signals.result }}
    args:
      text: ${{ FN.serialize_json(var.signal.samples) }}

  - ref: find_slack_users
    # Returns a list of list of Slack users per alert
    action: integrations.slack.find_slack_users
    depends_on:
      - extract_emails
    for_each: ${{ for var.emails in ACTIONS.extract_emails.result }}
    args:
      emails: ${{ var.emails }}

  - ref: extract_slack_user_ids
    # Returns a list of list of Slack user IDs per alert
    action: core.transform.forward
    depends_on:
      - find_slack_users
    for_each: ${{ for var.user_ids in ACTIONS.find_slack_users.result }}
    args:
      tags: ${{ FN.format.map('<@{}>', var.user_ids) }}

  - ref: send_slack_notification
    action: integrations.chat.slack.post_slack_message
    depends_on:
      - find_slack_users
      - reshape_signals
    run_if: ${{ FN.not_empty(ACTIONS.find_slack_users.result) }}
    for_each:
      - ${{ for var.signal in ACTIONS.reshape_signals.result }}
      - ${{ for var.user_ids in ACTIONS.extract_slack_user_ids.result }}
    args:
      channel: ${{ SECRETS.slack.SLACK_CHANNEL }}
      text: Datadog alerts
      blocks:
        - type: header
          text:
            type: plain_text
            text: ${{ var.signal.title }}
            emoji: true
        - type: context
          elements:
            - type: plain_text
              text: "*Link to signal:* ${{ var.signal.link_to_signal }}"
        # Tag Slack users
        - type: context
          elements:
            - type: plain_text
              text: "*Tagged users:* ${{ var.user_ids.tags }}"
        - type: context
          elements:
            - type: plain_text
              text: "*Status:* ${{ var.signal.status }}"
        - type: context
          elements:
            - type: plain_text
              text: "*First seen:* ${{ FN.from_timestamp(var.signal.first_seen, 'ms') }}"
            - type: plain_text
              text: "*Last seen:* ${{ FN.from_timestamp(var.signal.last_seen, 'ms') }}"
        - type: section
          text:
            type: mrkdwn
            text: ${{ var.signal.description }}
