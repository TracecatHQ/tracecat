definition:
  title: Run Atomic Red Team tests on a Limacharlie sensor
  description:
    Runs Atomic Red Team tests on sensor given `sensor_id`, `investigation_id`, `test_ids`, and `payload_dir_path`.
    Requires secret named `limacharlie` with keys `LIMACHARLIE_API_SECRET` and `LIMACHARLIE_OID`.
  entrypoint:
    expects:
      sensor_id:
        type: str
        description: The ID of the sensor to run the tests on.
      investigation_id:
        type: str
        description: The ID of the investigation associated with the tests.
      test_ids:
        type: list[str]
        description: A list of test IDs to be executed.
      payload_dir_path:
        type: str
        description: The directory path where the payloads are stored.
    ref: upload_emulation_tests
  inputs:
    api_url: https://api.limacharlie.io/v1
    jwt_url: https://jwt.limacharlie.io
    token_response_key: token
    datetime_format: "%Y-%m-%d %H:%M:%S"
    event_type: RECEIPT

  actions:
    - action: core.http_request
      ref: upload_emulation_tests
      for_each: ${{ for var.test_id in TRIGGER.test_ids }}
      args:
        url: "${{ INPUTS.api_url }}/${{ TRIGGER.sensor_id }}/"
        token_response_key: ${{ INPUTS.token_response_key }}
        jwt_url: "${{ INPUTS.jwt_url }}?oid=${{ SECRETS.limacharlie.LIMACHARLIE_OID }}&secret=${{ SECRETS.limacharlie.LIMACHARLIE_API_SECRET }}"
        payload:
          tasks: ["put --payload-name ${{ var.test_id }} --payload-path ${{ TRIGGER.payload_dir_path }}\\${{ var.test_id }}.exe"]
          investigation_id: ${{ TRIGGER.investigation_id }}
        headers:
          Content-Type: application/x-www-form-urlencoded

    - action: core.http_request
      ref: run_emulation_tests
      depends_on:
        - upload_emulation_tests
      for_each: ${{ for var.test_id in TRIGGER.test_ids }}
      args:
        url: "${{ INPUTS.api_url }}/${{ TRIGGER.sensor_id }}/"
        token_response_key: ${{ INPUTS.token_response_key }}
        jwt_url: "${{ INPUTS.jwt_url }}?oid=${{ SECRETS.limacharlie.LIMACHARLIE_OID }}&secret=${{ SECRETS.limacharlie.LIMACHARLIE_API_SECRET }}"
        payload:
          tasks: ["run --shell-command '${{ TRIGGER.payload_dir_path }}\\${{ var.test_id }}.exe'"]
          investigation_id: ${{ TRIGGER.investigation_id }}
        headers:
          Content-Type: application/x-www-form-urlencoded

    - action: core.transform.reshape
      ref: emulation_times
      depends_on:
        - run_emulation_tests
      args:
        value:
          start: ${{ FN.to_datestring(ENV.workflow.start_time, INPUTS.datetime_format) }}
          end: ${{ FN.to_datestring(FN.now(), INPUTS.datetime_format) }}

    - action: core.http_request
      ref: list_emulation_results
      depends_on:
        - run_emulation_tests
      # Filter for results between start of workflow and now
      args:
        url: |
          ${{ INPUTS.api_url }}/v1/insight/${{ ACTIONS.emulation_times.result.start }}/
          ${{ TRIGGER.sensor_id }}?
          start=${{ ACTIONS.emulation_times.result.start }}&
          end=${{ ACTIONS.emulation_times.result.end }}&
          event_type=${{ INPUTS.event_type }}

    # TODO: Upload results to records
