"""MalwareBazaar integration.

Authentication method: Token-based

Requires: A secret named `malwarebazaar` with key `MALWAREBAZAAR_API_KEY`

References: https://bazaar.abuse.ch/api/

Supported APIs:

```python
analyze_malware_sample = {
    "endpoint": "/v1",
    "method": "POST",
    "ocsf_schema": "",
    "reference": "https://bazaar.abuse.ch/api/#query_hash",
}
```
"""

import os
from typing import Annotated, Any

import httpx

from tracecat.registry import Field, registry

MALWAREBAZAAR_BASE_URL = "https://mb-api.abuse.ch/api"


@registry.register(
    default_title="Analyze malware sample",
    description="Analyze a malware sample using Malwarebazaar.",
    display_group="Malwarebazaar",
    namespace="integrations.malwarebazaar",
    secrets=["malwarebazaar"],
)
async def analyze_malware_sample(
    file_hash: Annotated[
        str, Field(..., description="The hash of the malware sample to analyze")
    ],
) -> dict[str, Any]:
    headers = {
        "Accept": "application/json",
        "API-KEY": os.environ["MALWAREBAZAAR_API_KEY"],
    }
    data = {"query": "get_info", "hash": file_hash}
    async with httpx.AsyncClient(base_url=MALWAREBAZAAR_BASE_URL) as client:
        response = await client.post("/v1", headers=headers, data=data)
        response.raise_for_status()
        return response.json()
