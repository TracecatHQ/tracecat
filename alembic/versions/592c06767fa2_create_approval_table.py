"""Create approval table

Revision ID: 592c06767fa2
Revises: f04f005837c9
Create Date: 2025-10-14 17:11:51.996711

"""

from collections.abc import Sequence

import sqlalchemy as sa
import sqlmodel.sql.sqltypes
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "592c06767fa2"
down_revision: str | None = "f04f005837c9"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum("PENDING", "APPROVED", "REJECTED", name="approvalstatus").create(
        op.get_bind()
    )
    op.create_table(
        "approval",
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("surrogate_id", sa.Integer(), nullable=False),
        sa.Column("owner_id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("session_id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("tool_call_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("tool_name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column(
            "status",
            postgresql.ENUM(
                "PENDING",
                "APPROVED",
                "REJECTED",
                name="approvalstatus",
                create_type=False,
            ),
            nullable=False,
        ),
        sa.Column("reason", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("data", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column("approved_by", sqlmodel.sql.sqltypes.GUID(), nullable=True),
        sa.Column("approved_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["approved_by"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("surrogate_id"),
        sa.UniqueConstraint(
            "owner_id",
            "session_id",
            "tool_call_id",
            name="uq_approval_owner_session_tool",
        ),
    )
    op.create_index(op.f("ix_approval_id"), "approval", ["id"], unique=True)
    op.create_index(
        op.f("ix_approval_session_id"), "approval", ["session_id"], unique=False
    )
    op.create_index(op.f("ix_approval_status"), "approval", ["status"], unique=False)
    op.create_index(
        op.f("ix_approval_tool_call_id"), "approval", ["tool_call_id"], unique=False
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_approval_tool_call_id"), table_name="approval")
    op.drop_index(op.f("ix_approval_status"), table_name="approval")
    op.drop_index(op.f("ix_approval_session_id"), table_name="approval")
    op.drop_index(op.f("ix_approval_id"), table_name="approval")
    op.drop_table("approval")
    sa.Enum("PENDING", "APPROVED", "REJECTED", name="approvalstatus").drop(
        op.get_bind()
    )
    # ### end Alembic commands ###
