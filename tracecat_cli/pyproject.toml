[build-system]
requires = ["hatchling >= 1.13.0"]
build-backend = "hatchling.build"

[project]
name = "tracecat_cli"
description = "Tracecat CLI tool."
readme = "README.md"
requires-python = ">=3.12"
license = "AGPL-3.0"
authors = [{ name = "Tracecat", email = "founders@tracecat.com" }]
classifiers = [
    "Development Status :: 4 - Beta",
    "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.12",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Intended Audience :: System Administrators",
    "Topic :: Security",
    "Topic :: System :: Monitoring",
    "Topic :: System :: Systems Administration",
]
dependencies = ["typer==0.12.3", "python-dotenv==1.0.1", "orjson==3.10.3"]
dynamic = ["version"]

[project.urls]
Homepage = "https://tracecat.com"
Documentation = "https://docs.tracecat.com/"
Repository = "https://github.com/TracecatHQ/tracecat"

[project.optional-dependencies]
dev = [
    "respx",
    "pytest",
    "pytest-asyncio",
    "pytest-mock==3.14.0",
    "minio",
    "mypy",
    "pre-commit",
]

[project.scripts]
tracecat = "tracecat_cli.__main__:main"

[tool.hatch.version]
path = "tracecat_cli/__init__.py"

[tool.mypy]
strict = true
ignore_missing_imports = true

[tool.ruff]
line-length = 88
fix = true

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long, handled by ruff
    "B008", # do not perform function calls in argument defaults
    "W191", # indentation contains tabs
]


[tool.pytest.ini_options]
addopts = ["--strict-config", "--strict-markers", "-vvrP"]
xfail_strict = true
log_level = "INFO"
log_cli = true
log_cli_level = "INFO"
markers = [
    "webtest: marks test that require the web",
    "slow: marks tests as slow",
]

[tool.ruff.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true
