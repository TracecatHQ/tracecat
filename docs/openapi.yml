openapi: 3.1.0
info:
  title: Tracecat API
  summary: Tracecat API
  description: Tracecat is the security automation platform built for builders. You
    can operate Tracecat in headless mode by using the API to create, manage, and
    run workflows.
  termsOfService: https://docs.google.com/document/d/e/2PACX-1vQvDe3SoVAPoQc51MgfGCP71IqFYX_rMVEde8zC4qmBCec5f8PLKQRdxa6tsUABT8gWAR9J-EVs2CrQ/pub
  contact:
    name: Tracecat Founders
    email: founders@tracecat.com
  license:
    name: AGPL-3.0
    url: https://www.gnu.org/licenses/agpl-3.0.html
  version: 0.1.0
paths:
  /health:
    get:
      summary: Check Health
      operationId: check_health_health_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
                type: object
                title: Response Check Health Health Get
  /webhooks/{path}/{secret}:
    post:
      tags:
      - public
      summary: Incoming Webhook
      description: 'Webhook endpoint to trigger a workflow.


        This is an external facing endpoint is used to trigger a workflow by sending
        a webhook request.

        The workflow is identified by the `path` parameter, which is equivalent to
        the workflow id.'
      operationId: incoming_webhook_webhooks__path___secret__post
      parameters:
      - name: path
        in: path
        required: true
        schema:
          type: string
          title: Path
      - name: secret
        in: path
        required: true
        schema:
          type: string
          title: Secret
      requestBody:
        content:
          application/json:
            schema:
              anyOf:
              - type: object
              - type: 'null'
              title: Payload
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /workflows:
    get:
      tags:
      - workflows
      summary: List Workflows
      description: 'List workflows.


        If `library` is True, it will list workflows from the library. If `library`
        is False, it will list workflows owned by the user.'
      operationId: list_workflows_workflows_get
      security:
      - OAuth2PasswordBearer: []
      parameters:
      - name: library
        in: query
        required: false
        schema:
          type: boolean
          default: false
          title: Library
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WorkflowMetadataResponse'
                title: Response List Workflows Workflows Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
      - workflows
      summary: Create Workflow
      description: Create new Workflow with title and description.
      operationId: create_workflow_workflows_post
      security:
      - OAuth2PasswordBearer: []
      - APIKeyHeader: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWorkflowParams'
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowMetadataResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /workflows/{workflow_id}:
    get:
      tags:
      - workflows
      summary: Get Workflow
      description: Return Workflow as title, description, list of Action JSONs, adjacency
        list of Action IDs.
      operationId: get_workflow_workflows__workflow_id__get
      security:
      - OAuth2PasswordBearer: []
      - APIKeyHeader: []
      parameters:
      - name: workflow_id
        in: path
        required: true
        schema:
          type: string
          title: Workflow Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    patch:
      tags:
      - workflows
      summary: Update Workflow
      description: Update a workflow.
      operationId: update_workflow_workflows__workflow_id__patch
      security:
      - OAuth2PasswordBearer: []
      parameters:
      - name: workflow_id
        in: path
        required: true
        schema:
          type: string
          title: Workflow Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWorkflowParams'
      responses:
        '204':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
      - workflows
      summary: Delete Workflow
      description: Delete a workflow.
      operationId: delete_workflow_workflows__workflow_id__delete
      security:
      - OAuth2PasswordBearer: []
      parameters:
      - name: workflow_id
        in: path
        required: true
        schema:
          type: string
          title: Workflow Id
      responses:
        '204':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /workflows/{workflow_id}/copy:
    post:
      tags:
      - workflows
      summary: Copy Workflow
      description: Copy a workflow. Not intended for users.
      operationId: copy_workflow_workflows__workflow_id__copy_post
      security:
      - OAuth2PasswordBearer: []
      - APIKeyHeader: []
      parameters:
      - name: workflow_id
        in: path
        required: true
        schema:
          type: string
          title: Workflow Id
      requestBody:
        content:
          application/json:
            schema:
              anyOf:
              - $ref: '#/components/schemas/CopyWorkflowParams'
              - type: 'null'
              title: Params
      responses:
        '204':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /workflows/{workflow_id}/commit:
    post:
      tags:
      - workflows
      summary: Commit Workflow
      description: 'Commit a workflow.


        This deploys the workflow and updates its version. If a YAML file is provided,
        it will override the workflow in the database.'
      operationId: commit_workflow_workflows__workflow_id__commit_post
      security:
      - OAuth2PasswordBearer: []
      parameters:
      - name: workflow_id
        in: path
        required: true
        schema:
          type: string
          title: Workflow Id
      requestBody:
        content:
          multipart/form-data:
            schema:
              allOf:
              - $ref: '#/components/schemas/Body_commit_workflow_workflows__workflow_id__commit_post'
              title: Body
      responses:
        '204':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /workflows/{workflow_id}/definition:
    get:
      tags:
      - workflows
      summary: Get Workflow Definition
      description: Get the latest version of a workflow definition.
      operationId: get_workflow_definition_workflows__workflow_id__definition_get
      security:
      - OAuth2PasswordBearer: []
      - APIKeyHeader: []
      parameters:
      - name: workflow_id
        in: path
        required: true
        schema:
          type: string
          title: Workflow Id
      - name: version
        in: query
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          title: Version
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowDefinition'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /workflows/{workflow_id}/runs:
    get:
      tags:
      - workflows
      summary: List Workflow Runs
      description: '**[DEPRECATED]** List all runs for a workflow.'
      operationId: list_workflow_runs_workflows__workflow_id__runs_get
      security:
      - OAuth2PasswordBearer: []
      parameters:
      - name: workflow_id
        in: path
        required: true
        schema:
          type: string
          title: Workflow Id
      - name: limit
        in: query
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          title: Limit
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WorkflowRunResponse'
                title: Response List Workflow Runs Workflows  Workflow Id  Runs Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
      - workflows
      summary: Create Workflow Run
      description: '**[DEPRECATED]** Create a workflow run.'
      operationId: create_workflow_run_workflows__workflow_id__runs_post
      security:
      - APIKeyHeader: []
      parameters:
      - name: workflow_id
        in: path
        required: true
        schema:
          type: string
          title: Workflow Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowRunEventParams'
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /workflows/{workflow_id}/runs/{workflow_run_id}:
    get:
      tags:
      - workflows
      summary: Get Workflow Run
      description: '**[DEPRECATED]** Get a workflow run.'
      operationId: get_workflow_run_workflows__workflow_id__runs__workflow_run_id__get
      security:
      - OAuth2PasswordBearer: []
      parameters:
      - name: workflow_id
        in: path
        required: true
        schema:
          type: string
          title: Workflow Id
      - name: workflow_run_id
        in: path
        required: true
        schema:
          type: string
          title: Workflow Run Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowRunResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
      - workflows
      summary: Update Workflow Run
      description: '**[DEPRECATED]** Update a workflow run.'
      operationId: update_workflow_run_workflows__workflow_id__runs__workflow_run_id__post
      security:
      - APIKeyHeader: []
      parameters:
      - name: workflow_id
        in: path
        required: true
        schema:
          type: string
          title: Workflow Id
      - name: workflow_run_id
        in: path
        required: true
        schema:
          type: string
          title: Workflow Run Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowRunEventParams'
      responses:
        '204':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /workflows/{workflow_id}/controls/trigger:
    post:
      tags:
      - workflows
      summary: Trigger Workflow Run
      description: Trigger a workflow run.
      operationId: trigger_workflow_run_workflows__workflow_id__controls_trigger_post
      security:
      - OAuth2PasswordBearer: []
      parameters:
      - name: workflow_id
        in: path
        required: true
        schema:
          type: string
          title: Workflow Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TriggerWorkflowRunParams'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartWorkflowResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /workflows/{workflow_id}/webhook:
    post:
      tags:
      - triggers
      summary: Create Webhook
      description: Create a webhook for a workflow.
      operationId: create_webhook_workflows__workflow_id__webhook_post
      security:
      - OAuth2PasswordBearer: []
      - APIKeyHeader: []
      parameters:
      - name: workflow_id
        in: path
        required: true
        schema:
          type: string
          title: Workflow Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertWebhookParams'
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    get:
      tags:
      - triggers
      summary: Get Webhook
      description: Get the webhook from a workflow.
      operationId: get_webhook_workflows__workflow_id__webhook_get
      security:
      - OAuth2PasswordBearer: []
      parameters:
      - name: workflow_id
        in: path
        required: true
        schema:
          type: string
          title: Workflow Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    patch:
      tags:
      - triggers
      summary: Update Webhook
      description: Update the webhook for a workflow. We currently supprt only one
        webhook per workflow.
      operationId: update_webhook_workflows__workflow_id__webhook_patch
      security:
      - OAuth2PasswordBearer: []
      parameters:
      - name: workflow_id
        in: path
        required: true
        schema:
          type: string
          title: Workflow Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertWebhookParams'
      responses:
        '204':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /workflows/{workflow_id}/schedules:
    get:
      tags:
      - triggers
      summary: List Schedules
      description: '**[WORK IN PROGRESS]** List all schedules for a workflow.'
      operationId: list_schedules_workflows__workflow_id__schedules_get
      security:
      - OAuth2PasswordBearer: []
      - APIKeyHeader: []
      parameters:
      - name: workflow_id
        in: path
        required: true
        schema:
          type: string
          title: Workflow Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Schedule'
                title: Response List Schedules Workflows  Workflow Id  Schedules Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
      - triggers
      summary: Create Schedule
      description: '**[WORK IN PROGRESS]** Create a schedule for a workflow.'
      operationId: create_schedule_workflows__workflow_id__schedules_post
      security:
      - OAuth2PasswordBearer: []
      - APIKeyHeader: []
      parameters:
      - name: workflow_id
        in: path
        required: true
        schema:
          type: string
          title: Workflow Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateScheduleParams'
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /workflows/{workflow_id}/schedules/{schedule_id}:
    get:
      tags:
      - triggers
      summary: Get Schedule
      description: '**[WORK IN PROGRESS]** Get a schedule from a workflow.'
      operationId: get_schedule_workflows__workflow_id__schedules__schedule_id__get
      security:
      - OAuth2PasswordBearer: []
      - APIKeyHeader: []
      parameters:
      - name: schedule_id
        in: path
        required: true
        schema:
          type: string
          title: Schedule Id
      - name: workflow_id
        in: path
        required: true
        schema:
          type: string
          title: Workflow Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
      - triggers
      summary: Delete Schedule
      description: '**[WORK IN PROGRESS]** Delete a schedule from a workflow.'
      operationId: delete_schedule_workflows__workflow_id__schedules__schedule_id__delete
      security:
      - OAuth2PasswordBearer: []
      - APIKeyHeader: []
      parameters:
      - name: schedule_id
        in: path
        required: true
        schema:
          type: string
          title: Schedule Id
      - name: workflow_id
        in: path
        required: true
        schema:
          type: string
          title: Workflow Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /actions:
    get:
      tags:
      - actions
      summary: List Actions
      description: List all actions for a workflow.
      operationId: list_actions_actions_get
      security:
      - OAuth2PasswordBearer: []
      parameters:
      - name: workflow_id
        in: query
        required: true
        schema:
          type: string
          title: Workflow Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ActionMetadataResponse'
                title: Response List Actions Actions Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
      - actions
      summary: Create Action
      description: Create a new action for a workflow.
      operationId: create_action_actions_post
      security:
      - OAuth2PasswordBearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateActionParams'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionMetadataResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /actions/{action_id}:
    get:
      tags:
      - actions
      summary: Get Action
      description: Get an action.
      operationId: get_action_actions__action_id__get
      security:
      - OAuth2PasswordBearer: []
      parameters:
      - name: action_id
        in: path
        required: true
        schema:
          type: string
          title: Action Id
      - name: workflow_id
        in: query
        required: true
        schema:
          type: string
          title: Workflow Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
      - actions
      summary: Update Action
      description: Update an action.
      operationId: update_action_actions__action_id__post
      security:
      - OAuth2PasswordBearer: []
      parameters:
      - name: action_id
        in: path
        required: true
        schema:
          type: string
          title: Action Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateActionParams'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
      - actions
      summary: Delete Action
      description: Delete an action.
      operationId: delete_action_actions__action_id__delete
      security:
      - OAuth2PasswordBearer: []
      parameters:
      - name: action_id
        in: path
        required: true
        schema:
          type: string
          title: Action Id
      responses:
        '204':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /actions/{action_id}/runs:
    get:
      tags:
      - actions
      summary: List Action Runs
      description: '**[DEPRECATED]** List all action Runs for an action.'
      operationId: list_action_runs_actions__action_id__runs_get
      security:
      - OAuth2PasswordBearer: []
      parameters:
      - name: action_id
        in: path
        required: true
        schema:
          type: string
          title: Action Id
      - name: limit
        in: query
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          title: Limit
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ActionRunResponse'
                title: Response List Action Runs Actions  Action Id  Runs Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
      - actions
      summary: Create Action Run
      description: '**[DEPRECATED]** Create an action Run.'
      operationId: create_action_run_actions__action_id__runs_post
      security:
      - APIKeyHeader: []
      parameters:
      - name: action_id
        in: path
        required: true
        schema:
          type: string
          title: Action Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActionRunEventParams'
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionRunResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /actions/{action_id}/runs/{action_run_id}:
    get:
      tags:
      - actions
      summary: Get Action Run
      description: '**[DEPRECATED]** Get an action run.'
      operationId: get_action_run_actions__action_id__runs__action_run_id__get
      security:
      - OAuth2PasswordBearer: []
      parameters:
      - name: action_id
        in: path
        required: true
        schema:
          type: string
          title: Action Id
      - name: action_run_id
        in: path
        required: true
        schema:
          type: string
          title: Action Run Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionRunResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
      - actions
      summary: Update Action Run
      description: '**[DEPRECATED]** Update an action run.'
      operationId: update_action_run_actions__action_id__runs__action_run_id__post
      security:
      - APIKeyHeader: []
      parameters:
      - name: action_id
        in: path
        required: true
        schema:
          type: string
          title: Action Id
      - name: action_run_id
        in: path
        required: true
        schema:
          type: string
          title: Action Run Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActionRunEventParams'
      responses:
        '204':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /events/search:
    get:
      tags:
      - events
      - search
      summary: Search Events
      description: '**[DEPRECATED]** Search for events based on query parameters.


        Note: currently on supports filter by `workflow_id` and sort by `published_at`.'
      operationId: search_events_events_search_get
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventSearchParams'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Event'
                type: array
                title: Response Search Events Events Search Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - OAuth2PasswordBearer: []
  /workflows/{workflow_id}/cases:
    post:
      tags:
      - cases
      summary: Create Case
      description: Create a new case for a workflow.
      operationId: create_case_workflows__workflow_id__cases_post
      security:
      - APIKeyHeader: []
      parameters:
      - name: workflow_id
        in: path
        required: true
        schema:
          type: string
          title: Workflow Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CaseParams'
              title: Cases
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    get:
      tags:
      - cases
      summary: List Cases
      description: List all cases for a workflow.
      operationId: list_cases_workflows__workflow_id__cases_get
      security:
      - OAuth2PasswordBearer: []
      parameters:
      - name: workflow_id
        in: path
        required: true
        schema:
          type: string
          title: Workflow Id
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          default: 100
          title: Limit
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Case-Output'
                title: Response List Cases Workflows  Workflow Id  Cases Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /workflows/{workflow_id}/cases/{case_id}:
    get:
      tags:
      - cases
      summary: Get Case
      description: Get a specific case for a workflow.
      operationId: get_case_workflows__workflow_id__cases__case_id__get
      security:
      - OAuth2PasswordBearer: []
      parameters:
      - name: workflow_id
        in: path
        required: true
        schema:
          type: string
          title: Workflow Id
      - name: case_id
        in: path
        required: true
        schema:
          type: string
          title: Case Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Case-Output'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
      - cases
      summary: Update Case
      description: Update a specific case for a workflow.
      operationId: update_case_workflows__workflow_id__cases__case_id__post
      security:
      - OAuth2PasswordBearer: []
      parameters:
      - name: workflow_id
        in: path
        required: true
        schema:
          type: string
          title: Workflow Id
      - name: case_id
        in: path
        required: true
        schema:
          type: string
          title: Case Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CaseParams'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /workflows/{workflow_id}/cases/{case_id}/events:
    post:
      tags:
      - cases
      summary: Create Case Event
      description: Create a new Case Event.
      operationId: create_case_event_workflows__workflow_id__cases__case_id__events_post
      security:
      - OAuth2PasswordBearer: []
      parameters:
      - name: workflow_id
        in: path
        required: true
        schema:
          type: string
          title: Workflow Id
      - name: case_id
        in: path
        required: true
        schema:
          type: string
          title: Case Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CaseEventParams'
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    get:
      tags:
      - cases
      summary: List Case Events
      description: List all Case Events.
      operationId: list_case_events_workflows__workflow_id__cases__case_id__events_get
      security:
      - OAuth2PasswordBearer: []
      parameters:
      - name: workflow_id
        in: path
        required: true
        schema:
          type: string
          title: Workflow Id
      - name: case_id
        in: path
        required: true
        schema:
          type: string
          title: Case Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CaseEvent'
                title: Response List Case Events Workflows  Workflow Id  Cases  Case
                  Id  Events Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /workflows/{workflow_id}/cases/{case_id}/events/{event_id}:
    get:
      tags:
      - cases
      summary: Get Case Event
      description: Get a specific case event.
      operationId: get_case_event_workflows__workflow_id__cases__case_id__events__event_id__get
      security:
      - OAuth2PasswordBearer: []
      parameters:
      - name: workflow_id
        in: path
        required: true
        schema:
          type: string
          title: Workflow Id
      - name: case_id
        in: path
        required: true
        schema:
          type: string
          title: Case Id
      - name: event_id
        in: path
        required: true
        schema:
          type: string
          title: Event Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /workflows/{workflow_id}/cases/{case_id}/metrics:
    get:
      tags:
      - cases
      summary: Get Case Metrics
      description: '**[DEPRECATED]** Get a specific case event metrics for a workflow.'
      operationId: get_case_metrics_workflows__workflow_id__cases__case_id__metrics_get
      security:
      - OAuth2PasswordBearer: []
      parameters:
      - name: workflow_id
        in: path
        required: true
        schema:
          type: string
          title: Workflow Id
      - name: case_id
        in: path
        required: true
        schema:
          type: string
          title: Case Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CaseMetrics'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /case-actions:
    get:
      tags:
      - cases
      summary: List Case Actions
      description: List all case actions.
      operationId: list_case_actions_case_actions_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CaseAction'
                type: array
                title: Response List Case Actions Case Actions Get
      security:
      - OAuth2PasswordBearer: []
    post:
      tags:
      - cases
      summary: Create Case Action
      description: Create a new case action.
      operationId: create_case_action_case_actions_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CaseActionParams'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CaseAction'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - OAuth2PasswordBearer: []
  /case-actions/{case_action_id}:
    delete:
      tags:
      - cases
      summary: Delete Case Action
      description: Delete a case action.
      operationId: delete_case_action_case_actions__case_action_id__delete
      security:
      - OAuth2PasswordBearer: []
      parameters:
      - name: case_action_id
        in: path
        required: true
        schema:
          type: string
          title: Case Action Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /case-contexts:
    get:
      tags:
      - cases
      summary: List Case Contexts
      description: List all case contexts.
      operationId: list_case_contexts_case_contexts_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/tracecat__db__schemas__CaseContext'
                type: array
                title: Response List Case Contexts Case Contexts Get
      security:
      - OAuth2PasswordBearer: []
    post:
      tags:
      - cases
      summary: Create Case Context
      description: Create a new case context.
      operationId: create_case_context_case_contexts_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CaseContextParams'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tracecat__db__schemas__CaseContext'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - OAuth2PasswordBearer: []
  /case-contexts/{case_context_id}:
    delete:
      tags:
      - cases
      summary: Delete Case Context
      description: Delete a case context.
      operationId: delete_case_context_case_contexts__case_context_id__delete
      security:
      - OAuth2PasswordBearer: []
      parameters:
      - name: case_context_id
        in: path
        required: true
        schema:
          type: string
          title: Case Context Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /completions/cases/stream:
    post:
      tags:
      - cases
      - completions
      summary: Streaming Autofill Case Fields
      description: Use an LLM to autocomplete fields for cases.
      operationId: streaming_autofill_case_fields_completions_cases_stream_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Body_streaming_autofill_case_fields_completions_cases_stream_post'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
                type: object
                title: Response Streaming Autofill Case Fields Completions Cases Stream
                  Post
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - OAuth2PasswordBearer: []
  /users:
    get:
      tags:
      - users
      summary: Get User
      description: Get a user.
      operationId: get_user_users_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      security:
      - OAuth2PasswordBearer: []
    put:
      tags:
      - users
      summary: Create User
      description: Create new user.
      operationId: create_user_users_put
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      security:
      - OAuth2PasswordBearer: []
    post:
      tags:
      - users
      summary: Update User
      description: Update a user.
      operationId: update_user_users_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserParams'
        required: true
      responses:
        '204':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - OAuth2PasswordBearer: []
    delete:
      tags:
      - users
      summary: Delete User
      description: Delete a user.
      operationId: delete_user_users_delete
      responses:
        '204':
          description: Successful Response
      security:
      - OAuth2PasswordBearer: []
  /secrets:
    get:
      tags:
      - secrets
      summary: List Secrets
      description: List user secrets.
      operationId: list_secrets_secrets_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SecretResponse'
                type: array
                title: Response List Secrets Secrets Get
      security:
      - OAuth2PasswordBearer: []
      - APIKeyHeader: []
    put:
      tags:
      - secrets
      summary: Create Secret
      description: Create a secret.
      operationId: create_secret_secrets_put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSecretParams'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - OAuth2PasswordBearer: []
      - APIKeyHeader: []
    post:
      tags:
      - secrets
      summary: Update Secret
      description: Update a secret
      operationId: update_secret_secrets_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSecretParams'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Secret'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - OAuth2PasswordBearer: []
  /secrets/{secret_name}:
    get:
      tags:
      - secrets
      summary: Get Secret
      description: Get a secret.
      operationId: get_secret_secrets__secret_name__get
      security:
      - OAuth2PasswordBearer: []
      - APIKeyHeader: []
      parameters:
      - name: secret_name
        in: path
        required: true
        schema:
          type: string
          title: Secret Name
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Secret'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
      - secrets
      summary: Delete Secret
      description: Delete a secret.
      operationId: delete_secret_secrets__secret_name__delete
      security:
      - OAuth2PasswordBearer: []
      - APIKeyHeader: []
      parameters:
      - name: secret_name
        in: path
        required: true
        schema:
          type: string
          title: Secret Name
      responses:
        '204':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /secrets/search:
    post:
      tags:
      - secrets
      summary: Search Secrets
      description: '**[WORK IN PROGRESS]**   Get a secret by ID.'
      operationId: search_secrets_secrets_search_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchSecretsParams'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Secret'
                type: array
                title: Response Search Secrets Secrets Search Post
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - OAuth2PasswordBearer: []
  /udfs:
    get:
      tags:
      - udfs
      summary: List Udfs
      description: List all user-defined function specifications for a user.
      operationId: list_udfs_udfs_get
      security:
      - OAuth2PasswordBearer: []
      - APIKeyHeader: []
      parameters:
      - name: limit
        in: query
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          title: Limit
      - name: ns
        in: query
        required: false
        schema:
          anyOf:
          - type: array
            items:
              type: string
          - type: 'null'
          title: Ns
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UDFSpec'
                title: Response List Udfs Udfs Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /udfs/{udf_key}:
    get:
      tags:
      - udfs
      summary: Get Udf
      description: Get a user-defined function specification.
      operationId: get_udf_udfs__udf_key__get
      security:
      - OAuth2PasswordBearer: []
      - APIKeyHeader: []
      parameters:
      - name: udf_key
        in: path
        required: true
        schema:
          type: string
          title: Udf Key
      - name: namespace
        in: query
        required: false
        schema:
          type: string
          title: Namespace
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UDFSpec'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
      - udfs
      summary: Create Udf
      description: Create a user-defined function specification.
      operationId: create_udf_udfs__udf_key__post
      security:
      - OAuth2PasswordBearer: []
      parameters:
      - name: udf_key
        in: path
        required: true
        schema:
          type: string
          title: Udf Key
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UDFSpec'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /udfs/{udf_key}/validate:
    post:
      tags:
      - udfs
      summary: Validate Udf Args
      description: Validate user-defined function's arguments.
      operationId: validate_udf_args_udfs__udf_key__validate_post
      security:
      - OAuth2PasswordBearer: []
      parameters:
      - name: udf_key
        in: path
        required: true
        schema:
          type: string
          title: Udf Key
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              title: Args
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UDFArgsValidationResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
components:
  schemas:
    ActionMetadataResponse:
      properties:
        id:
          type: string
          title: Id
        workflow_id:
          type: string
          title: Workflow Id
        type:
          type: string
          title: Type
        title:
          type: string
          title: Title
        description:
          type: string
          title: Description
        status:
          type: string
          title: Status
        key:
          type: string
          title: Key
      type: object
      required:
      - id
      - workflow_id
      - type
      - title
      - description
      - status
      - key
      title: ActionMetadataResponse
    ActionResponse:
      properties:
        id:
          type: string
          title: Id
        type:
          type: string
          title: Type
        title:
          type: string
          title: Title
        description:
          type: string
          title: Description
        status:
          type: string
          title: Status
        inputs:
          type: object
          title: Inputs
        key:
          type: string
          title: Key
      type: object
      required:
      - id
      - type
      - title
      - description
      - status
      - inputs
      - key
      title: ActionResponse
    ActionRun:
      properties:
        owner_id:
          type: string
          title: Owner Id
        created_at:
          type: string
          format: date-time
          title: Created At
        updated_at:
          type: string
          format: date-time
          title: Updated At
        id:
          type: string
          title: Id
        status:
          type: string
          title: Status
          default: pending
        action_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Action Id
        workflow_run_id:
          type: string
          title: Workflow Run Id
        error_msg:
          anyOf:
          - type: string
          - type: 'null'
          title: Error Msg
        result:
          anyOf:
          - type: string
          - type: 'null'
          title: Result
      type: object
      required:
      - owner_id
      - created_at
      - updated_at
      - action_id
      - workflow_run_id
      title: ActionRun
    ActionRunEventParams:
      properties:
        id:
          type: string
          title: Id
        owner_id:
          type: string
          title: Owner Id
        created_at:
          type: string
          format: date-time
          title: Created At
        updated_at:
          type: string
          format: date-time
          title: Updated At
        status:
          type: string
          enum:
          - pending
          - running
          - failure
          - success
          - canceled
          title: Status
        workflow_run_id:
          type: string
          title: Workflow Run Id
        error_msg:
          anyOf:
          - type: string
          - type: 'null'
          title: Error Msg
        result:
          anyOf:
          - type: string
          - type: 'null'
          title: Result
      type: object
      required:
      - id
      - owner_id
      - created_at
      - updated_at
      - status
      - workflow_run_id
      title: ActionRunEventParams
    ActionRunResponse:
      properties:
        id:
          type: string
          title: Id
        created_at:
          type: string
          format: date-time
          title: Created At
        updated_at:
          type: string
          format: date-time
          title: Updated At
        action_id:
          type: string
          title: Action Id
        workflow_run_id:
          type: string
          title: Workflow Run Id
        status:
          type: string
          title: Status
        error_msg:
          anyOf:
          - type: string
          - type: 'null'
          title: Error Msg
        result:
          anyOf:
          - type: object
          - type: 'null'
          title: Result
      type: object
      required:
      - id
      - created_at
      - updated_at
      - action_id
      - workflow_run_id
      - status
      title: ActionRunResponse
    ActionStatement:
      properties:
        ref:
          type: string
          pattern: ^[a-z0-9_]+$
          title: Ref
          description: Unique reference for the task
        description:
          type: string
          title: Description
          default: ''
        action:
          type: string
          pattern: ^[a-z0-9_.]+$
          title: Action
          description: Action type / UDF key
        args:
          type: object
          title: Args
          description: Arguments for the action
        depends_on:
          items:
            type: string
          type: array
          title: Depends On
          description: Task dependencies
        run_if:
          anyOf:
          - type: string
          - type: 'null'
          title: Run If
          description: Condition to run the task
        for_each:
          anyOf:
          - type: string
          - items:
              type: string
            type: array
          - type: 'null'
          title: For Each
          description: Iterate over a list of items and run the task for each item.
      type: object
      required:
      - ref
      - action
      title: ActionStatement
    Body_commit_workflow_workflows__workflow_id__commit_post:
      properties:
        yaml_file:
          type: string
          format: binary
          title: Yaml File
      type: object
      title: Body_commit_workflow_workflows__workflow_id__commit_post
    Body_streaming_autofill_case_fields_completions_cases_stream_post:
      properties:
        cases:
          items:
            $ref: '#/components/schemas/Case-Input'
          type: array
          title: Cases
        fields:
          items:
            type: string
          type: array
          title: Fields
      type: object
      required:
      - cases
      - fields
      title: Body_streaming_autofill_case_fields_completions_cases_stream_post
    Case-Input:
      properties:
        id:
          type: string
          title: Id
        owner_id:
          type: string
          title: Owner Id
        workflow_id:
          type: string
          title: Workflow Id
        case_title:
          type: string
          title: Case Title
        payload:
          type: object
          title: Payload
        malice:
          type: string
          enum:
          - malicious
          - benign
          title: Malice
        status:
          type: string
          enum:
          - open
          - closed
          - in_progress
          - reported
          - escalated
          title: Status
        priority:
          type: string
          enum:
          - low
          - medium
          - high
          - critical
          title: Priority
        action:
          type: string
          enum:
          - ignore
          - quarantine
          - informational
          - sinkhole
          - active_compromise
          title: Action
        context:
          $ref: '#/components/schemas/ListModel_CaseContext_-Input'
        suppression:
          $ref: '#/components/schemas/ListModel_Suppression_'
        tags:
          $ref: '#/components/schemas/ListModel_Tag_'
        created_at:
          type: string
          format: date-time
          title: Created At
        updated_at:
          type: string
          format: date-time
          title: Updated At
      type: object
      required:
      - owner_id
      - workflow_id
      - case_title
      - payload
      - malice
      - status
      - priority
      - action
      - context
      - suppression
      - tags
      title: Case
      description: Case model used in the API and runner.
    Case-Output:
      properties:
        id:
          type: string
          title: Id
        owner_id:
          type: string
          title: Owner Id
        workflow_id:
          type: string
          title: Workflow Id
        case_title:
          type: string
          title: Case Title
        payload:
          type: object
          title: Payload
        malice:
          type: string
          enum:
          - malicious
          - benign
          title: Malice
        status:
          type: string
          enum:
          - open
          - closed
          - in_progress
          - reported
          - escalated
          title: Status
        priority:
          type: string
          enum:
          - low
          - medium
          - high
          - critical
          title: Priority
        action:
          type: string
          enum:
          - ignore
          - quarantine
          - informational
          - sinkhole
          - active_compromise
          title: Action
        context:
          $ref: '#/components/schemas/ListModel_CaseContext_-Output'
        suppression:
          $ref: '#/components/schemas/ListModel_Suppression_'
        tags:
          $ref: '#/components/schemas/ListModel_Tag_'
        created_at:
          type: string
          format: date-time
          title: Created At
        updated_at:
          type: string
          format: date-time
          title: Updated At
      type: object
      required:
      - owner_id
      - workflow_id
      - case_title
      - payload
      - malice
      - status
      - priority
      - action
      - context
      - suppression
      - tags
      title: Case
      description: Case model used in the API and runner.
    CaseAction:
      properties:
        owner_id:
          type: string
          title: Owner Id
        created_at:
          type: string
          format: date-time
          title: Created At
        updated_at:
          type: string
          format: date-time
          title: Updated At
        id:
          type: string
          title: Id
        tag:
          type: string
          title: Tag
        value:
          type: string
          title: Value
        user_id:
          anyOf:
          - type: string
          - type: 'null'
          title: User Id
      type: object
      required:
      - owner_id
      - created_at
      - updated_at
      - tag
      - value
      - user_id
      title: CaseAction
    CaseActionParams:
      properties:
        tag:
          type: string
          title: Tag
        value:
          type: string
          title: Value
        user_id:
          anyOf:
          - type: string
          - type: 'null'
          title: User Id
      type: object
      required:
      - tag
      - value
      title: CaseActionParams
    CaseContext-Input:
      properties:
        key:
          type: string
          title: Key
        value:
          type: string
          title: Value
      type: object
      required:
      - key
      - value
      title: CaseContext
    CaseContextParams:
      properties:
        tag:
          type: string
          title: Tag
        value:
          type: string
          title: Value
        user_id:
          anyOf:
          - type: string
          - type: 'null'
          title: User Id
      type: object
      required:
      - tag
      - value
      title: CaseContextParams
    CaseEvent:
      properties:
        owner_id:
          type: string
          title: Owner Id
        created_at:
          type: string
          format: date-time
          title: Created At
        updated_at:
          type: string
          format: date-time
          title: Updated At
        id:
          type: string
          title: Id
        type:
          type: string
          title: Type
        workflow_id:
          type: string
          title: Workflow Id
        case_id:
          type: string
          title: Case Id
        initiator_role:
          type: string
          title: Initiator Role
        data:
          anyOf:
          - additionalProperties:
              anyOf:
              - type: string
              - type: 'null'
            type: object
          - type: 'null'
          title: Data
      type: object
      required:
      - owner_id
      - created_at
      - updated_at
      - type
      - workflow_id
      - case_id
      - initiator_role
      - data
      title: CaseEvent
    CaseEventParams:
      properties:
        type:
          type: string
          title: Type
        data:
          anyOf:
          - additionalProperties:
              anyOf:
              - type: string
              - type: 'null'
            type: object
          - type: 'null'
          title: Data
      type: object
      required:
      - type
      - data
      title: CaseEventParams
    CaseMetrics:
      properties:
        statues:
          items:
            additionalProperties:
              anyOf:
              - type: integer
              - type: number
            type: object
          type: array
          title: Statues
        priority:
          items:
            additionalProperties:
              anyOf:
              - type: integer
              - type: number
            type: object
          type: array
          title: Priority
        malice:
          items:
            additionalProperties:
              anyOf:
              - type: integer
              - type: number
            type: object
          type: array
          title: Malice
      type: object
      required:
      - statues
      - priority
      - malice
      title: CaseMetrics
      description: Summary statistics for cases over a time period.
    CaseParams:
      properties:
        id:
          type: string
          title: Id
        owner_id:
          type: string
          title: Owner Id
        created_at:
          type: string
          title: Created At
        updated_at:
          type: string
          title: Updated At
        workflow_id:
          type: string
          title: Workflow Id
        case_title:
          type: string
          title: Case Title
        payload:
          type: object
          title: Payload
        malice:
          type: string
          enum:
          - malicious
          - benign
          title: Malice
        status:
          type: string
          enum:
          - open
          - closed
          - in_progress
          - reported
          - escalated
          title: Status
        priority:
          type: string
          enum:
          - low
          - medium
          - high
          - critical
          title: Priority
        context:
          $ref: '#/components/schemas/ListModel_CaseContext_-Input'
        action:
          type: string
          enum:
          - ignore
          - quarantine
          - informational
          - sinkhole
          - active_compromise
          title: Action
        suppression:
          $ref: '#/components/schemas/ListModel_Suppression_'
        tags:
          $ref: '#/components/schemas/ListModel_Tag_'
      type: object
      required:
      - id
      - owner_id
      - created_at
      - updated_at
      - workflow_id
      - case_title
      - payload
      - malice
      - status
      - priority
      - context
      - action
      - suppression
      - tags
      title: CaseParams
    CopyWorkflowParams:
      properties:
        owner_id:
          type: string
          title: Owner Id
      type: object
      required:
      - owner_id
      title: CopyWorkflowParams
    CreateActionParams:
      properties:
        workflow_id:
          type: string
          title: Workflow Id
        type:
          type: string
          title: Type
        title:
          type: string
          title: Title
      type: object
      required:
      - workflow_id
      - type
      - title
      title: CreateActionParams
    CreateScheduleParams:
      properties:
        entrypoint_ref:
          type: string
          title: Entrypoint Ref
        entrypoint_payload:
          anyOf:
          - type: object
          - type: 'null'
          title: Entrypoint Payload
        cron:
          type: string
          title: Cron
      type: object
      required:
      - entrypoint_ref
      - cron
      title: CreateScheduleParams
    CreateSecretParams:
      properties:
        type:
          const: custom
          title: Type
          default: custom
        name:
          type: string
          title: Name
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
        keys:
          items:
            $ref: '#/components/schemas/SecretKeyValue'
          type: array
          title: Keys
        tags:
          anyOf:
          - additionalProperties:
              type: string
            type: object
          - type: 'null'
          title: Tags
      type: object
      required:
      - name
      - keys
      title: CreateSecretParams
      description: 'Create a new secret.


        Secret types

        ------------

        - `custom`: Arbitrary user-defined types

        - `token`: A token, e.g. API Key, JWT Token (TBC)

        - `oauth2`: OAuth2 Client Credentials (TBC)'
    CreateUserParams:
      properties:
        tier:
          type: string
          enum:
          - free
          - pro
          - enterprise
          title: Tier
          default: free
        settings:
          anyOf:
          - type: string
          - type: 'null'
          title: Settings
      type: object
      title: CreateUserParams
    CreateWorkflowParams:
      properties:
        title:
          anyOf:
          - type: string
          - type: 'null'
          title: Title
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
      type: object
      title: CreateWorkflowParams
    DSLConfig:
      properties:
        scheduler:
          type: string
          enum:
          - static
          - dynamic
          title: Scheduler
          default: dynamic
      type: object
      title: DSLConfig
    DSLInput:
      properties:
        title:
          type: string
          title: Title
        description:
          type: string
          title: Description
        entrypoint:
          type: string
          title: Entrypoint
        actions:
          items:
            $ref: '#/components/schemas/ActionStatement'
          type: array
          title: Actions
        config:
          $ref: '#/components/schemas/DSLConfig'
        triggers:
          items:
            $ref: '#/components/schemas/Trigger'
          type: array
          title: Triggers
        inputs:
          type: object
          title: Inputs
          description: Static input parameters
        trigger_inputs:
          type: object
          title: Trigger Inputs
          description: Dynamic input parameters
      type: object
      required:
      - title
      - description
      - entrypoint
      - actions
      title: DSLInput
      description: 'DSL definition for a workflow.


        The difference between this and a normal workflow engine is that here,

        our workflow execution order is defined by the DSL itself, independent

        of a workflow scheduler.


        With a traditional

        This allows the execution of the workflow to be fully deterministic.'
    Event:
      properties:
        published_at:
          type: string
          format: date-time
          title: Published At
        action_id:
          type: string
          title: Action Id
        action_run_id:
          type: string
          title: Action Run Id
        action_title:
          type: string
          title: Action Title
        action_type:
          type: string
          title: Action Type
        workflow_id:
          type: string
          title: Workflow Id
        workflow_title:
          type: string
          title: Workflow Title
        workflow_run_id:
          type: string
          title: Workflow Run Id
        data:
          type: object
          title: Data
      type: object
      required:
      - published_at
      - action_id
      - action_run_id
      - action_title
      - action_type
      - workflow_id
      - workflow_title
      - workflow_run_id
      - data
      title: Event
    EventSearchParams:
      properties:
        workflow_id:
          type: string
          title: Workflow Id
        limit:
          type: integer
          title: Limit
          default: 1000
        order_by:
          type: string
          title: Order By
          default: pubished_at
        workflow_run_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Workflow Run Id
        query:
          anyOf:
          - type: string
          - type: 'null'
          title: Query
        group_by:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Group By
        agg:
          anyOf:
          - type: string
          - type: 'null'
          title: Agg
      type: object
      required:
      - workflow_id
      title: EventSearchParams
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    ListModel_CaseContext_-Input:
      items:
        $ref: '#/components/schemas/CaseContext-Input'
      type: array
      title: ListModel[CaseContext]
    ListModel_CaseContext_-Output:
      items:
        $ref: '#/components/schemas/tracecat__types__api__CaseContext'
      type: array
      title: ListModel[CaseContext]
    ListModel_Suppression_:
      items:
        $ref: '#/components/schemas/Suppression'
      type: array
      title: ListModel[Suppression]
    ListModel_Tag_:
      items:
        $ref: '#/components/schemas/Tag'
      type: array
      title: ListModel[Tag]
    Schedule:
      properties:
        owner_id:
          type: string
          title: Owner Id
        created_at:
          type: string
          format: date-time
          title: Created At
        updated_at:
          type: string
          format: date-time
          title: Updated At
        id:
          type: string
          title: Id
        status:
          type: string
          title: Status
          default: offline
        cron:
          type: string
          title: Cron
        entrypoint_payload:
          type: object
          title: Entrypoint Payload
        workflow_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Workflow Id
      type: object
      required:
      - owner_id
      - created_at
      - updated_at
      - cron
      - workflow_id
      title: Schedule
    SearchSecretsParams:
      properties:
        names:
          items:
            type: string
          type: array
          title: Names
      type: object
      required:
      - names
      title: SearchSecretsParams
    Secret:
      properties:
        owner_id:
          type: string
          title: Owner Id
        created_at:
          type: string
          format: date-time
          title: Created At
        updated_at:
          type: string
          format: date-time
          title: Updated At
        id:
          type: string
          title: Id
        type:
          type: string
          title: Type
          default: custom
        name:
          type: string
          maxLength: 255
          title: Name
          description: Secret names should be unique within a user's scope.
        description:
          anyOf:
          - type: string
            maxLength: 255
          - type: 'null'
          title: Description
        encrypted_keys:
          anyOf:
          - type: string
            format: binary
          - type: 'null'
          title: Encrypted Keys
        tags:
          anyOf:
          - additionalProperties:
              type: string
            type: object
          - type: 'null'
          title: Tags
      type: object
      required:
      - owner_id
      - created_at
      - updated_at
      - name
      - tags
      title: Secret
    SecretKeyValue:
      properties:
        key:
          type: string
          title: Key
        value:
          type: string
          format: password
          title: Value
          writeOnly: true
      type: object
      required:
      - key
      - value
      title: SecretKeyValue
    SecretResponse:
      properties:
        id:
          type: string
          title: Id
        type:
          const: custom
          title: Type
        name:
          type: string
          title: Name
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
        keys:
          items:
            $ref: '#/components/schemas/SecretKeyValue'
          type: array
          title: Keys
      type: object
      required:
      - id
      - type
      - name
      - keys
      title: SecretResponse
    StartWorkflowResponse:
      properties:
        status:
          type: string
          title: Status
        message:
          type: string
          title: Message
        id:
          type: string
          title: Id
      type: object
      required:
      - status
      - message
      - id
      title: StartWorkflowResponse
    Suppression:
      properties:
        condition:
          type: string
          title: Condition
        result:
          type: string
          title: Result
      type: object
      required:
      - condition
      - result
      title: Suppression
    Tag:
      properties:
        tag:
          type: string
          title: Tag
        value:
          type: string
          title: Value
        is_ai_generated:
          type: boolean
          title: Is Ai Generated
          default: false
      type: object
      required:
      - tag
      - value
      title: Tag
    Trigger:
      properties:
        type:
          type: string
          enum:
          - schedule
          - webhook
          title: Type
        ref:
          type: string
          pattern: ^[a-z0-9_]+$
          title: Ref
        args:
          type: object
          title: Args
      type: object
      required:
      - type
      - ref
      title: Trigger
    TriggerWorkflowRunParams:
      properties:
        action_key:
          type: string
          title: Action Key
        payload:
          type: object
          title: Payload
      type: object
      required:
      - action_key
      - payload
      title: TriggerWorkflowRunParams
    UDFArgsValidationResponse:
      properties:
        ok:
          type: boolean
          title: Ok
        message:
          type: string
          title: Message
        detail:
          anyOf:
          - {}
          - type: 'null'
          title: Detail
      type: object
      required:
      - ok
      - message
      title: UDFArgsValidationResponse
    UDFSpec:
      properties:
        owner_id:
          type: string
          title: Owner Id
        created_at:
          type: string
          format: date-time
          title: Created At
        updated_at:
          type: string
          format: date-time
          title: Updated At
        id:
          type: string
          title: Id
        description:
          type: string
          title: Description
        namespace:
          type: string
          title: Namespace
        key:
          type: string
          title: Key
        version:
          anyOf:
          - type: string
          - type: 'null'
          title: Version
        json_schema:
          anyOf:
          - type: object
          - type: 'null'
          title: Json Schema
        meta:
          anyOf:
          - type: object
          - type: 'null'
          title: Meta
      type: object
      required:
      - owner_id
      - created_at
      - updated_at
      - description
      - namespace
      - key
      - json_schema
      - meta
      title: UDFSpec
      description: 'UDF spec.


        Used in:

        1. Frontend action library

        2. Frontend integration action form'
    UpdateActionParams:
      properties:
        title:
          anyOf:
          - type: string
          - type: 'null'
          title: Title
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
        status:
          anyOf:
          - type: string
          - type: 'null'
          title: Status
        inputs:
          anyOf:
          - type: object
          - type: 'null'
          title: Inputs
      type: object
      title: UpdateActionParams
    UpdateWorkflowParams:
      properties:
        title:
          anyOf:
          - type: string
          - type: 'null'
          title: Title
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
        status:
          anyOf:
          - type: string
            enum:
            - online
            - offline
          - type: 'null'
          title: Status
        object:
          anyOf:
          - type: object
          - type: 'null'
          title: Object
        version:
          anyOf:
          - type: integer
          - type: 'null'
          title: Version
        entrypoint:
          anyOf:
          - type: string
          - type: 'null'
          title: Entrypoint
        icon_url:
          anyOf:
          - type: string
          - type: 'null'
          title: Icon Url
      type: object
      title: UpdateWorkflowParams
    UpsertWebhookParams:
      properties:
        status:
          anyOf:
          - type: string
            enum:
            - online
            - offline
          - type: 'null'
          title: Status
        entrypoint_ref:
          anyOf:
          - type: string
          - type: 'null'
          title: Entrypoint Ref
        method:
          anyOf:
          - type: string
            enum:
            - GET
            - POST
          - type: 'null'
          title: Method
      type: object
      title: UpsertWebhookParams
    User:
      properties:
        owner_id:
          type: string
          title: Owner Id
        created_at:
          type: string
          format: date-time
          title: Created At
        updated_at:
          type: string
          format: date-time
          title: Updated At
        id:
          type: string
          title: Id
        tier:
          type: string
          title: Tier
          default: free
        settings:
          anyOf:
          - type: string
          - type: 'null'
          title: Settings
      type: object
      required:
      - owner_id
      - created_at
      - updated_at
      title: User
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
      - loc
      - msg
      - type
      title: ValidationError
    WebhookResponse:
      properties:
        owner_id:
          type: string
          title: Owner Id
        created_at:
          type: string
          format: date-time
          title: Created At
        updated_at:
          type: string
          format: date-time
          title: Updated At
        id:
          type: string
          title: Id
        secret:
          type: string
          title: Secret
        status:
          type: string
          enum:
          - online
          - offline
          title: Status
        entrypoint_ref:
          anyOf:
          - type: string
          - type: 'null'
          title: Entrypoint Ref
        filters:
          type: object
          title: Filters
        method:
          type: string
          enum:
          - GET
          - POST
          title: Method
        workflow_id:
          type: string
          title: Workflow Id
        url:
          type: string
          title: Url
      type: object
      required:
      - owner_id
      - created_at
      - updated_at
      - id
      - secret
      - status
      - filters
      - method
      - workflow_id
      - url
      title: WebhookResponse
    WorkflowDefinition:
      properties:
        owner_id:
          type: string
          title: Owner Id
        created_at:
          type: string
          format: date-time
          title: Created At
        updated_at:
          type: string
          format: date-time
          title: Updated At
        id:
          type: string
          title: Id
        version:
          type: integer
          title: Version
          description: DSL spec version
        workflow_id:
          type: string
          title: Workflow Id
        content:
          $ref: '#/components/schemas/DSLInput'
      type: object
      required:
      - owner_id
      - created_at
      - updated_at
      - version
      - workflow_id
      - content
      title: WorkflowDefinition
      description: 'A workflow definition.


        This is the underlying representation/snapshot of a workflow in the system,
        which

        can directly execute in the runner.


        Shoulds

        -------

        1. Be convertible into a Workspace Workflow + Acitons

        2. Be convertible into a YAML DSL

        3. Be able to be versioned


        Shouldn''ts

        ----------

        1. Have any stateful information


        Relationships

        -------------

        - 1 Workflow to many WorkflowDefinitions'
    WorkflowMetadataResponse:
      properties:
        id:
          type: string
          title: Id
        title:
          type: string
          title: Title
        description:
          type: string
          title: Description
        status:
          type: string
          title: Status
        icon_url:
          anyOf:
          - type: string
          - type: 'null'
          title: Icon Url
        created_at:
          type: string
          format: date-time
          title: Created At
        updated_at:
          type: string
          format: date-time
          title: Updated At
        version:
          anyOf:
          - type: integer
          - type: 'null'
          title: Version
      type: object
      required:
      - id
      - title
      - description
      - status
      - icon_url
      - created_at
      - updated_at
      - version
      title: WorkflowMetadataResponse
    WorkflowResponse:
      properties:
        id:
          type: string
          title: Id
        title:
          type: string
          title: Title
        description:
          type: string
          title: Description
        status:
          type: string
          title: Status
        actions:
          additionalProperties:
            $ref: '#/components/schemas/ActionResponse'
          type: object
          title: Actions
        object:
          anyOf:
          - type: object
          - type: 'null'
          title: Object
        owner_id:
          type: string
          title: Owner Id
        version:
          anyOf:
          - type: integer
          - type: 'null'
          title: Version
        webhook:
          $ref: '#/components/schemas/WebhookResponse'
        schedules:
          items:
            $ref: '#/components/schemas/Schedule'
          type: array
          title: Schedules
        entrypoint:
          anyOf:
          - type: string
          - type: 'null'
          title: Entrypoint
      type: object
      required:
      - id
      - title
      - description
      - status
      - actions
      - object
      - owner_id
      - webhook
      - schedules
      - entrypoint
      title: WorkflowResponse
    WorkflowRunEventParams:
      properties:
        id:
          type: string
          title: Id
        owner_id:
          type: string
          title: Owner Id
        created_at:
          type: string
          format: date-time
          title: Created At
        updated_at:
          type: string
          format: date-time
          title: Updated At
        status:
          type: string
          enum:
          - pending
          - running
          - failure
          - success
          - canceled
          title: Status
      type: object
      required:
      - id
      - owner_id
      - created_at
      - updated_at
      - status
      title: WorkflowRunEventParams
    WorkflowRunResponse:
      properties:
        id:
          type: string
          title: Id
        workflow_id:
          type: string
          title: Workflow Id
        status:
          type: string
          title: Status
        created_at:
          type: string
          format: date-time
          title: Created At
        updated_at:
          type: string
          format: date-time
          title: Updated At
        action_runs:
          items:
            $ref: '#/components/schemas/ActionRun'
          type: array
          title: Action Runs
          default: []
      type: object
      required:
      - id
      - workflow_id
      - status
      - created_at
      - updated_at
      title: WorkflowRunResponse
    tracecat__db__schemas__CaseContext:
      properties:
        owner_id:
          type: string
          title: Owner Id
        created_at:
          type: string
          format: date-time
          title: Created At
        updated_at:
          type: string
          format: date-time
          title: Updated At
        id:
          type: string
          title: Id
        tag:
          type: string
          title: Tag
        value:
          type: string
          title: Value
        user_id:
          anyOf:
          - type: string
          - type: 'null'
          title: User Id
      type: object
      required:
      - owner_id
      - created_at
      - updated_at
      - tag
      - value
      - user_id
      title: CaseContext
    tracecat__types__api__CaseContext:
      properties:
        key:
          type: string
          title: Key
        value:
          type: string
          title: Value
      type: object
      required:
      - key
      - value
      title: CaseContext
  securitySchemes:
    OAuth2PasswordBearer:
      type: oauth2
      flows:
        password:
          scopes: {}
          tokenUrl: token
    APIKeyHeader:
      type: apiKey
      in: header
      name: X-API-Key
tags:
- name: public
  description: Public facing endpoints
- name: workflows
  description: Workflow management
- name: actions
  description: Action management
- name: triggers
  description: Workflow triggers
- name: secrets
  description: Secret management
- name: udfs
  description: User-defined functions
- name: events
  description: Event management
- name: cases
  description: Case management
