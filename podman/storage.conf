[storage]
# === Storage Location Configuration ===
# Runtime storage for temporary container data (tmpfs-backed)
runroot = "/run/containers/storage"

# Persistent storage for images, volumes, and container data
graphroot = "/var/lib/containers/storage"

[storage.options]
# Prevent additional image stores for security
# This ensures all images are in controlled locations
# Blocking additional stores prevents:
# - Unauthorized image sources
# - Path traversal via symlinks
# - Access to sensitive host directories
additionalimagestores = []

# === SELinux Configuration ===
# Enable SELinux labeling for all storage operations
enable_selinux = true

# === Mount Configuration with SELinux ===
# Use fuse-overlayfs for SELinux-aware mounting
mount_program = "/usr/bin/fuse-overlayfs"
# Mount options:
# - nodev: prevent device file creation
# - metacopy: optimize overlay performance
# - overlay.mount_program: use SELinux-aware mounter
mountopt = "nodev,metacopy=on,overlay.mount_program=/usr/bin/fuse-overlayfs"

# === SELinux Context Configuration ===
# Context for mounted filesystems
# system_u: system process identity
# object_r: object role
# container_file_t: container file type
# s0: sensitivity level
selinux_mount_context = "system_u:object_r:container_file_t:s0"

# Context for container runtime processes
# system_u: system process identity
# system_r: system role
# container_runtime_t: runtime process type
# s0: sensitivity level
selinux_process_label = "system_u:system_r:container_runtime_t:s0"

# === SELinux Mount Options ===
# Enable SELinux context handling in mount operations
mount_program_options = ["--selinuxcontext"]

[storage.options.overlay]
# === Overlay Storage Configuration ===
# Use SELinux-aware overlay filesystem
mount_program = "/usr/bin/fuse-overlayfs"
# Apply same secure mount options as above
mountopt = "nodev,metacopy=on,overlay.mount_program=/usr/bin/fuse-overlayfs"
