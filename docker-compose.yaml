version: "3.8"
services:
  api:
    build: .
    ports:
      - "8000:8000"
    volumes:
      - ./:/app
      - ~/.tracecat:/home/apiuser/.tracecat
    environment:
      API_MODULE: "tracecat.api.app:app"
      TRACECAT__SIGNING_SECRET: ${TRACECAT__SIGNING_SECRET}
      TRACECAT__SERVICE_KEY: ${TRACECAT__SERVICE_KEY}
      TRACECAT__DB_ENCRYPTION_KEY: ${TRACECAT__DB_ENCRYPTION_KEY}
      TRACECAT__DB_URI: ${TRACECAT__DB_URI}
      SUPABASE_JWT_SECRET: ${SUPABASE_JWT_SECRET}
      SUPABASE_JWT_ALGORITHM: ${SUPABASE_JWT_ALGORITHM}
      SUPABASE_PSQL_URL: ${SUPABASE_PSQL_URL} # For auth
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      LOG_LEVEL: ${LOG_LEVEL:-INFO}
      RABBITMQ_URI: ${RABBITMQ_URI}
    container_name: api
    restart: unless-stopped
    depends_on:
      rabbitmq:
        condition: service_healthy
      nginx:
        condition: service_started
    networks:
      - nginx-network
      - internal-network

  runner:
    build: .
    ports:
      - "8001:8000"
    volumes:
      - ./:/app
      - ~/.tracecat:/home/apiuser/.tracecat
    environment:
      API_MODULE: "tracecat.runner.app:app"
      LOG_LEVEL: ${LOG_LEVEL:-INFO}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      RABBITMQ_URI: ${RABBITMQ_URI}
      SUPABASE_PSQL_URL: ${SUPABASE_PSQL_URL} # For auth
      TRACECAT__DB_ENCRYPTION_KEY: ${TRACECAT__DB_ENCRYPTION_KEY}
      TRACECAT__DB_URI: ${TRACECAT__DB_URI}
      TRACECAT__SERVICE_KEY: ${TRACECAT__SERVICE_KEY}
      TRACECAT__SIGNING_SECRET: ${TRACECAT__SIGNING_SECRET}
    container_name: runner
    restart: unless-stopped
    depends_on:
      rabbitmq:
        condition: service_healthy
      nginx:
        condition: service_started
    networks:
      - nginx-network
      - internal-network

  scheduler:
    build: Dockerfile.scheduler
    ports:
      - "8002:8000"
    volumes:
      - ./:/app
      - ~/.tracecat:/home/apiuser/.tracecat
    environment:
      LOG_LEVEL: ${LOG_LEVEL:-INFO}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      SUPABASE_PSQL_URL: ${SUPABASE_PSQL_URL} # For auth
      TRACECAT__DB_ENCRYPTION_KEY: ${TRACECAT__DB_ENCRYPTION_KEY}
      TRACECAT__DB_URI: ${TRACECAT__DB_URI}
      TRACECAT__SERVICE_KEY: ${TRACECAT__SERVICE_KEY}
      TRACECAT__SIGNING_SECRET: ${TRACECAT__SIGNING_SECRET}
    container_name: scheduler
    restart: unless-stopped
    depends_on:
      - nginx
    networks:
      - internal-network

  supabase:
    build: Dockerfile.supabase
    ports:
      - "54321:54321"
      - "54322:54322"
      - "54323:54323"
    volumes:
      - supabase_data:/supabase/data
    container_name: supabase
    restart: unless-stopped
    networks:
      - internal-network

  nginx:
    image: nginx:mainline-bookworm
    container_name: nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx:/etc/nginx/conf.d
    networks:
      - nginx-network

  rabbitmq:
    image: rabbitmq:3.13-management
    container_name: rabbitmq
    ports:
      - "5672:5672" # RabbitMQ server
      - "15672:15672" # Management UI
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - ./rabbitmq_data:/var/lib/rabbitmq
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping", "-q"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - nginx-network

networks:
  nginx-network:
  internal-network:
