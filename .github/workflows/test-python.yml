name: pytest

on:
  push:
    branches: ["main"]
    paths:
      - tracecat/**
      - registry/**
      - tests/**
      - pyproject.toml
      - Dockerfile
      - docker-compose.yml
      - docker-compose.dev.yml
      - .github/workflows/test-python.yml
  pull_request:
    branches: ["main", "staging"]
    paths:
      - tracecat/**
      - registry/**
      - tests/**
      - pyproject.toml
      - Dockerfile
      - docker-compose.yml
      - docker-compose.dev.yml
      - .github/workflows/test-python.yml
  workflow_dispatch:
    inputs:
      git-ref:
        description: "Git Ref (Optional)"
        required: true

permissions:
  contents: read
  packages: write

env:
  UV_SYSTEM_PYTHON: 1

jobs:
  test-all:
    runs-on: blacksmith-4vcpu-ubuntu-2204
    timeout-minutes: 60
    strategy:
      matrix:
        test_group:
          - unit
          - registry
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.git-ref }}

      - name: Install uv
        uses: useblacksmith/setup-uv@v4
        with:
          version: "0.4.20"
          enable-cache: true
          cache-dependency-glob: "pyproject.toml"

      - name: Set up Python 3.12
        uses: useblacksmith/setup-python@v6
        with:
          python-version: "3.12"

      - name: Install Deno
        uses: denoland/setup-deno@v2.0.3
        with:
          cache: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/
          kubectl version --client

      - name: Install kind
        run: |
          curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.20.0/kind-linux-amd64
          chmod +x ./kind
          sudo mv ./kind /usr/local/bin/kind
          kind version

      - name: Create kind cluster
        run: |
          kind create cluster --name tracecat-ci
          kubectl cluster-info --context kind-tracecat-ci
          kubectl get nodes

      - name: Run environment setup script
        run: |
          echo "y
          localhost
          n" | bash env.sh

      - name: Start core Docker services
        env:
          TRACECAT__UNSAFE_DISABLE_SM_MASKING: "true"
        run: docker compose -f docker-compose.dev.yml up -d temporal api worker executor postgres_db caddy

      - name: Install dependencies
        run: |
          uv pip install ".[dev]"
          uv pip install ./registry

      - name: Run tests
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          SLACK_CHANNEL_ID: ${{ secrets.SLACK_CHANNEL_ID }}
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        run: uv run pytest tests/${{ matrix.test_group }} -ra
