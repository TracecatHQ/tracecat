name: pytest

on:
  push:
    branches: ["main"]
    paths:
      - tracecat/**
      - pyproject.toml
      - .github/workflows/test.yml
  pull_request:
    branches: ["main"]
    paths:
      - tracecat/**
      - pyproject.toml
      - .github/workflows/test.yml

permissions:
  contents: read
  packages: write

jobs:
  pytest:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"
          cache-dependency-path: pyproject.toml

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Download Temporal CLI
        run: |
          # Download the Temporal CLI archive
          curl -L -o temporal.tar.gz "https://temporal.download/cli/archive/latest?platform=linux&arch=amd64"

          # Create a directory for the Temporal CLI
          mkdir -p temporal-cli

          # Extract the archive
          tar -xzf temporal.tar.gz -C temporal-cli

          # Add the Temporal CLI binary to the PATH
          echo "${GITHUB_WORKSPACE}/temporal-cli" >> $GITHUB_PATH

      - name: Verify Temporal CLI installation
        run: temporal --version

      - name: Run environment setup script
        run: bash env.sh

      - name: Start Docker services
        run: docker compose -f docker-compose.dev.yml up --build --no-deps -d api worker postgres_db caddy

      - name: Verify Tracecat API is running
        run: curl -s http://localhost/api/health | jq -e '.status == "ok"'

      - name: pip install Tracecat
        run: |
          python -m pip install --upgrade pip
          pip install ".[dev]"
          pip install ./cli

      - name: Start Temporal server
        run: nohup temporal server start-dev > temporal.log 2>&1 &

      - name: Run tests (headless mode)
        env:
          LOG_LEVEL: WARNING
        run: pytest tests/unit --temporal-no-restart --tracecat-no-restart
