# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python Tests

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v3
        with:
          python-version: "3.12"
          cache: "pip"
          cache-dependency-path: pyproject.toml

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Download Temporal CLI
        run: |
          # Download the Temporal CLI archive
          curl -L -o temporal.tar.gz "https://temporal.download/cli/archive/latest?platform=linux&arch=amd64"

          # Create a directory for the Temporal CLI
          mkdir -p temporal-cli

          # Extract the archive
          tar -xzf temporal.tar.gz -C temporal-cli

          # Add the Temporal CLI binary to the PATH
          echo "${GITHUB_WORKSPACE}/temporal-cli" >> $GITHUB_PATH

      - name: Verify Temporal CLI installation
        run: temporal --version

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ".[dev,cli]"

      - name: Run environment setup script
        run: bash env.sh

      - name: Run tests (headless mode)
        run: |
          # Start Tracecat services (without frontend)
          docker compose -f docker-compose.yml up --no-deps api worker postgres_db -d

          # Start Temporal lite server
          temporal server start-dev

          # Run Tracecat tests
          pytest tests --temporal-no-restart --tracecat-no-restart
