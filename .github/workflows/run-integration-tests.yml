name: Integration Tests

on:
  push:
    branches: ["main"]
    paths:
      - tracecat/**
      - registry/**
      - tests/integration/**
      - pyproject.toml
      - uv.lock
      - Dockerfile
      - docker-compose.local.yml
      - .github/workflows/test-integration-custom-registry.yml
  pull_request:
    branches: ["main", "staging"]
    paths:
      - tracecat/**
      - registry/**
      - tests/integration/**
      - pyproject.toml
      - uv.lock
      - Dockerfile
      - docker-compose.local.yml
      - .github/workflows/test-integration-custom-registry.yml
  workflow_dispatch:
    inputs:
      git-ref:
        description: "Git Ref (Optional)"
        required: false

permissions:
  contents: read
  packages: write


jobs:
  # ──────────────────────────────────────────────────────────────────
  # 1.  LIGHTWEIGHT SSH / INSTALL SMOKE-TEST
  # ──────────────────────────────────────────────────────────────────
  ssh-sanity:
    runs-on: ubuntu-latest
    timeout-minutes: 5            # short fail-fast window
    steps:
      - uses: actions/checkout@v4

      # Load the private deploy key into an ssh-agent.
      # The secret value MUST be the *raw* PEM text, not base64.
      - uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.CUSTOM_REPO_SSH_PRIVATE_KEY }}

      - name: Install uv
        uses: useblacksmith/setup-uv@v4
        with:
          version: "0.8.4"

      - name: Set up Python 3.12
        uses: useblacksmith/setup-python@v6
        with:
          python-version: "3.12"

      # Lightweight connectivity check — choose ONE:
      #
      # A) Strict git connectivity (fastest, no deps):
      - name: Verify git over SSH
        run: git ls-remote git@github.com:TracecatHQ/internal-registry.git HEAD
      #
      # B) End-to-end install smoke-test (still <10 s):
      #- name: Smoke-test pip install via SSH
      #  run: |
      #    uv pip install --no-deps --quiet \
      #      "git+ssh://git@github.com/TracecatHQ/internal-registry.git@main"
      #    python -c "import importlib, sys; print('import ok:', bool(importlib.import_module('internal_registry', package=None))); sys.exit(0)"

  # ──────────────────────────────────────────────────────────────────
  # 2.  FULL INTEGRATION TESTS  (unchanged, now depends on ssh-sanity)
  # ──────────────────────────────────────────────────────────────────
  test-integration:
    needs: ssh-sanity             # only start if key check passed
    runs-on: blacksmith-4vcpu-ubuntu-2204
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.git-ref }}

      - name: Install uv
        uses: useblacksmith/setup-uv@v4
        with:
          version: "0.8.4"
          enable-cache: true
          cache-dependency-glob: "pyproject.toml"

      - name: Set up Python 3.12
        uses: useblacksmith/setup-python@v6
        with:
          python-version: "3.12"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Run environment setup script
        run: |
          echo "y
          localhost
          n
          test@tracecat.com" | bash env.sh

      - name: Start core Docker services
        env:
          COMPOSE_BAKE: "true"
          TRACECAT__UNSAFE_DISABLE_SM_MASKING: "true"
        run: |
          docker compose -f docker-compose.local.yml up -d temporal api worker executor postgres_db caddy

          # Wait for services to become healthy
          echo "Waiting for services to become healthy..."
          timeout 300 bash -c '
            while true; do
              if docker compose -f docker-compose.local.yml ps --format json | jq -r ".[].Health" | grep -v "healthy" | grep -q "starting\|unhealthy"; then
                echo "Waiting for services to be healthy..."
                sleep 5
              else
                echo "All services are healthy"
                break
              fi
            done
          '

          # Show final service status
          docker compose -f docker-compose.local.yml ps

      - name: Run integration tests
        env:
          # Expect a base64 encoded key
          CUSTOM_REPO_SSH_PRIVATE_KEY: ${{ secrets.CUSTOM_REPO_SSH_PRIVATE_KEY }}
        run: |
           uv run --extra ee pytest tests/integration -ra

      - name: Show Docker logs on failure
        if: failure()
        run: |
          echo "=== Docker Service Status ==="
          docker compose -f docker-compose.local.yml ps

          echo "=== API Logs ==="
          docker compose -f docker-compose.local.yml logs api --tail=200

          echo "=== Worker Logs ==="
          docker compose -f docker-compose.local.yml logs worker --tail=200

          echo "=== Executor Logs ==="
          docker compose -f docker-compose.local.yml logs executor --tail=200
      - name: Clean up
        if: always()
        run: |
          docker compose -f docker-compose.local.yml down -v
