type: action
definition:
  title: Plan response
  description: Plan response to an AWS GuardDuty alert.
  display_group: AWS GuardDuty
  namespace: aws_guardduty
  name: plan_response
  doc_url: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html
  expects:
    alert_analysis:
      type: dict[str, any]
      description: Alert analysis.
    alert_context:
      type: str
      description: Alert context.
    analyst_context:
      type: str
      description: Analyst context.
    playbooks:
      type: str
      description: Playbooks.
  steps:
    - ref: one_shot
      action: core.transform.reshape
      args:
        value: |
          {
            "thoughts": [
              "API calls from IP 203.0.113.42 on threat list detected",
              "IAM user developer-admin made suspicious calls",
              "Finding: UnauthorizedAccess:IAMUser/MaliciousIPCaller.Custom",
              "Access detected outside normal patterns",
              "Potential credential compromise"
            ],
            "summary": "IAM User credential compromise: user developer-admin accessed AWS from known malicious IP 203.0.113.42",
            "analysis": {
              "key_indicators": "IP address on custom threat list; Unusual API call patterns; Access from non-corporate network",
              "affected_assets": "Account: developer-admin (IAM User); AWS Account: 123456789012",
              "potential_impact": "Unauthorized access to AWS resources; Data exfiltration; Privilege escalation"
            },
            "response_plan": {
              "containment": [
                {
                  "action": "Disable IAM user access keys",
                  "assignee": "Cloud Security",
                  "timeframe": "Immediate (<15 min)",
                  "commands": ["aws iam update-access-key --access-key-id <access_key_id> --status Inactive --user-name developer-admin"]
                },
                {
                  "action": "Block malicious IP at firewall",
                  "assignee": "Network Security",
                  "timeframe": "<30 min",
                  "commands": ["aws ec2 create-network-acl-entry --network-acl-id acl-12345 --ingress --rule-number 100 --protocol all --port-range From=0,To=65535 --cidr-block 203.0.113.42/32 --rule-action deny"]
                }
              ],
              "investigation": [
                {
                  "action": "Review CloudTrail for user activity",
                  "assignee": "SOC Analyst",
                  "timeframe": "<1 hour",
                  "commands": ["aws cloudtrail lookup-events --lookup-attributes AttributeKey=Username,AttributeValue=developer-admin --start-time 2023-08-15T13:30:22Z --end-time 2023-08-15T15:30:22Z"]
                },
                {
                  "action": "Check for suspicious IP activity",
                  "assignee": "SOC Analyst",
                  "timeframe": "<1 hour",
                  "commands": ["aws cloudtrail lookup-events --lookup-attributes AttributeKey=Username,AttributeValue=developer-admin --start-time 2023-08-15T13:30:22Z --end-time 2023-08-15T15:30:22Z | grep '203.0.113.42'"]
                },
                {
                  "action": "Scan for additional compromises",
                  "assignee": "Cloud Security",
                  "timeframe": "<2 hours",
                  "commands": ["aws cloudtrail lookup-events --start-time 2023-08-14T14:30:22Z --end-time 2023-08-15T14:30:22Z | grep -E 'AssumeRole|CreateAccessKey|DeleteCloudTrail'"]
                }
              ],
              "recovery": [
                {
                  "action": "Reset user credentials with MFA",
                  "assignee": "IAM Admin",
                  "timeframe": "After investigation",
                  "commands": ["aws iam update-login-profile --user-name developer-admin --password 'NewComplexTemporaryPassword123!' --password-reset-required"]
                },
                {
                  "action": "Apply least privilege permissions",
                  "assignee": "IAM Admin",
                  "timeframe": "<4 hours",
                  "commands": ["aws iam detach-user-policy --user-name developer-admin --policy-arn arn:aws:iam::aws:policy/AdministratorAccess"]
                }
              ]
            },
            "communications": [
              {
                "recipient": "CISO",
                "timeframe": "Immediate",
                "channel": "Phone + email",
                "message": "IAM credential compromise detected; Containment in progress; Investigation ongoing"
              },
              {
                "recipient": "DevOps Lead",
                "timeframe": "<1 hour",
                "channel": "Slack secure channel",
                "message": "Developer admin account compromised; Temporary access restrictions in place"
              }
            ]
          }
    - ref: plan_response
      action: agentic.plan_response
      args:
        alert_analysis: ${{ inputs.alert_analysis }}
        alert_context: ${{ inputs.alert_context }}
        analyst_context: ${{ inputs.analyst_context }}
        playbooks: ${{ inputs.playbooks }}
        example_response: ${{ steps.one_shot.result }}
  returns: ${{ steps.plan_response.result }}
