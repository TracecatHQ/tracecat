type: action
definition:
  title: Plan response
  description: |
    Create a structured incident response plan based on alert analysis.
    Prioritize actions and assign responsibilities for handling the incident.
  display_group: Agents
  namespace: agentic
  name: plan_response
  expects:
    alert_analysis:
      type: dict[str, any]
      description: Analysis of the alert including who, what, when, where, why, how.
    alert_context:
      type: str
      description: What are the alerts about? Where did they come from? Additional context about the incident, environment, and systems involved.
    analyst_context:
      type: str
      description: >
        Who is the analyst examining these alerts?
        What is their role? For what organization?
    playbooks:
      type: str
      description: >
        Optional reference playbooks, remediation guides, or standard operating procedures
        that may be relevant to this type of incident. Should include team structure, roles,
        responsibilities, escalation paths, and remediation procedures.
      default: ""
    example_response:
      type: dict[str, any] | None
      description: >
        An example response from the model to improve the quality of the output.
        Must fit the structured output schema. See `one_shot` step for an example.
      default: null
  steps:
    - ref: one_shot
      action: core.transform.reshape
      args:
        value: {
          "thoughts": [
            "Ukrainian IP with no authorized travel history for user jsmith@acme.com",
            "Brute force pattern: 3 failed logins before successful authentication",
            "Abnormal access: 15 financial files accessed in 3 minutes vs normal 5-7/hour",
            "VPN from known bulletproof hosting provider (ASN-123456)",
            "MFA bypass despite being enabled for this account"
          ],
          "summary": "Credential compromise of jsmith@acme.com (Finance) from Ukrainian IP at 03:45 UTC with rapid financial document access, bypassing MFA.",
          "analysis": {
            "key_indicators": "Multiple failed logins; Ukraine IP (unauthorized); Abnormal file access speed; MFA bypass; Off-hours activity; Bulletproof hosting connection",
            "affected_assets": "Account: jsmith@acme.com (Finance); 15 financial reports; VPN system",
            "potential_impact": "Q3 financial data exfiltration before earnings report; Potential insider trading risk"
          },
          "response_plan": {
            "containment": [
              {
                "action": "Disable jsmith@acme.com account",
                "assignee": "IAM Team (Eric)",
                "timeframe": "Immediate (<15 min)",
                "reference": "Account Compromise Playbook 1.2"
              },
              {
                "action": "Terminate VPN session from 45.67.89.123",
                "assignee": "Network Security (Sarah)",
                "timeframe": "Immediate (<15 min)",
                "reference": "VPN-SEC-052"
              },
              {
                "action": "Block IP 45.67.89.123 and ASN-123456",
                "assignee": "Network Ops (Michael)",
                "timeframe": "<30 min",
                "reference": "Threat Mitigation Guide"
              }
            ],
            "investigation": [
              {
                "action": "Extract VPN logs for jsmith (past 14 days)",
                "assignee": "SOC Analyst (Robert)",
                "timeframe": "<1 hour"
              },
              {
                "action": "Audit accessed financial documents",
                "assignee": "Data Security (Lisa)",
                "timeframe": "<2 hours",
                "reference": "Data Exfil checklist #4"
              },
              {
                "action": "Interview John Smith",
                "assignee": "IR Lead (David)",
                "timeframe": "<4 hours (business hours)",
                "reference": "TEMPLATE-IR-203"
              },
              {
                "action": "Check MFA logs for bypass method",
                "assignee": "IAM Team (Eric)",
                "timeframe": "<4 hours"
              }
            ],
            "recovery": [
              {
                "action": "Reset credentials with enforced MFA",
                "assignee": "IAM Team (Eric)",
                "timeframe": "After investigation",
                "reference": "Account Reinstatement 2.3.1"
              },
              {
                "action": "Audit MFA for all Finance users",
                "assignee": "IAM Team (Eric)",
                "timeframe": "<24 hours"
              }
            ]
          },
          "communications": [
            {
              "recipient": "CISO (Jennifer)",
              "timeframe": "Immediate",
              "channel": "Phone + encrypted email",
              "message": "Financial data breach pre-earnings; Containment active; Investigation ongoing"
            },
            {
              "recipient": "CFO (Thomas)",
              "timeframe": "<2 hours",
              "channel": "Secure message + in-person",
              "message": "Finance credentials compromised; Q3 data potentially accessed; Assess disclosure needs"
            },
            {
              "recipient": "John Smith",
              "timeframe": "Start of business",
              "channel": "Phone",
              "message": "Account disabled; Alternative access plan; IR interview required"
            }
          ]
        }

    - ref: structured_output
      action: core.transform.reshape
      args:
        value:
          type: json_schema
          name: response_plan
          strict: true
          schema:
            type: object
            required:
              - thoughts
              - summary
              - analysis
              - response_plan
            additionalProperties: true
            properties:
              thoughts:
                type: array
                items:
                  type: string
              summary:
                type: string
              analysis:
                type: object
              response_plan:
                type: object
    - ref: plan_response
      action: llm.openai.call
      args:
        prompt: >
          <alert_analysis>
          ${{ inputs.alert_analysis }}
          </alert_analysis>
        instructions: >
          <alert_context>
          ${{ inputs.alert_context }}
          </alert_context>

          <analyst_context>
          ${{ inputs.analyst_context }}
          </analyst_context>

          <playbooks>
          ${{ inputs.playbooks }}
          </playbooks>

          <guidance>
          Create a specific, actionable incident response plan with these required elements:

          - `thoughts`: Key technical observations from alert data (indicators, anomalies, patterns).
          - `summary`: Concise description of the incident (what, who, when, where, impact).
          - `analysis`: Key elements of your incident analysis (affected assets, indicators, impact).
          - `response_plan`: Prioritized actions by category (containment, investigation, recovery).

          Make your plan actionable:
          - Use exact identifiers (IPs, usernames, systems)
          - Specify clear timeframes for each action
          - Assign responsible teams/individuals
          - Reference specific playbook sections when applicable
          - Prioritize by urgency and impact

          Your output must be formatted as JSON.
          </guidance>

          <example_response>
          ${{ inputs.example_response || steps.one_shot.result }}
          </example_response>

          <task>
          Create an incident response plan based on the provided alert analysis.
          </task>
        text_format: ${{ steps.structured_output.result }}
  returns: ${{ FN.deserialize_json(steps.plan_response.result.output_text) }}
