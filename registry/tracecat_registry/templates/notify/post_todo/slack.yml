type: action
definition:
  title: Post todo
  description: Post todo action item to a Slack channel.
  display_group: Slack
  doc_url: https://api.slack.com/methods/chat.postMessage
  namespace: tools.slack
  name: post_todo
  expects:
    summary:
      type: str
      description: Brief one-line summary of the action item.
    status:
      type: enum["to_do", "in_progress", "done"]
      description: Status of the action item.
    fields:
      type: list[dict[str, any]]
      description: >-
        List of fields to display in the notification
        (e.g. `[{"user": "chris@tracecat.com"}, {"role": "admin"}]`).
    images:
      type: list[str] | None
      description: List of image URLs to display per metadata field.
      default: null
    labels:
      type: list[str]
      description: List of labels for the overflow menu.
    urls:
      type: list[str] | None
      description: List of URLs for the overflow menu.
      default: null
    channel:
      type: str
      description: ID that represents a channel, private group, or IM channel.
    thread_ts:
      type: str | None
      description: Timestamp of the thread to reply to.
      default: null
  steps:
    - ref: summary_block
      action: core.transform.reshape
      args:
        value:
          type: section
          block_id: summary
          text:
            type: mrkdwn
            text: "*${{ inputs.summary }}*"
    - ref: fields_block
      action: tools.slack_blocks.format_fields_context
      args:
        fields: "${{ inputs.fields + [{'Status': FN.capitalize(FN.replace(inputs.status, '_', ' '))}] }}"
        images: ${{ inputs.images }}
    - ref: overflow_menu
      action: tools.slack_elements.format_overflow_menu
      args:
        labels: ${{ inputs.labels }}
        urls: ${{ inputs.urls }}
    - ref: post_message
      action: tools.slack_sdk.call_method
      args:
        sdk_method: chat_postMessage
        params:
          channel: ${{ inputs.channel }}
          thread_ts: ${{ inputs.thread_ts }}
          attachments:
            - color: ${{ "#22c55e" if inputs.status == "done" else "#eab308" if inputs.status == "in_progress" else "" }}
              blocks:
                - "${{ FN.merge([steps.summary_block.result, {'accessory': steps.overflow_menu.result}]) }}"
                - "${{ steps.fields_block.result }}"
          metadata:
            event_type: todo
            event_payload:
              # Get the interaction context from the current action
              # in the workflow execution. Returns null if the
              # action is not interactive
              interaction_context: ${{ FN.get_interaction() }}
  returns: ${{ steps.post_message.result.message }}
