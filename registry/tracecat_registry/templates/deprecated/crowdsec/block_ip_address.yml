type: action
definition:
  name: block_ip_address
  namespace: integrations.crowdsec
  title: Block an IP address in CrowdSec
  description: Sends a request to CrowdSec to block a specific IP address.
  display_group: CrowdSec
  doc_url: https://crowdsecurity.github.io/api_doc/lapi/#/watchers/pushAlerts
  author: bouddha-fr
  secrets:
    - name: crowdsec
      keys:
        - CROWDSEC_API_TOKEN
      optional_keys: null
  expects:
    cn:
      type: str
      description: Country of origin of ip address
      default: null
    duration:
      type: str
      description: Selected ban duration
      default: type
    as_name:
      type: str
      description: Internet service provider
      default: null
    ip_address:
      type: str
      description: The IP address to block
      default: null
    url_server:
      type: str
      description: Your local url api crowdsec
      default: null
    timestamp:
      type: str
      description: Time
      default: null
  steps:
    - ref: block_ip_address
      action: core.http_request
      args:
        url: ${{ inputs.url_server }}/v1/alerts
        method: POST
        headers:
          accept: application/json
          Content-Type: application/json
          Authorization: Bearer ${{ SECRETS.crowdsec.CROWDSEC_API_TOKEN }}
        payload:
          - meta:
              - key: source_type
                value: API
            events:
              - meta:
                  - key: source
                    value: automated_block
                timestamp: ${{ inputs.timestamp }}
            labels:
              - crowdsec_alert
            source:
              cn: ${{ inputs.cn }}
              ip: ${{ inputs.ip_address }}
              range: ""
              scope: ip
              value: ip
              as_name: ${{ inputs.as_name }}
              latitude: 0
              as_number: ""
              longitude: 0
            message: Blocking IP due to suspicious activity
            stop_at: times
            capacity: 100
            scenario: tracecat/block_ip
            start_at: timestamp
            decisions:
              - type: ban
                scope: ip
                until: timestamp
                value: ip
                origin: crowdsec
                duration: ${{ inputs.duration }}
                scenario: tracecat/block_ip
            leakspeed: 1/m
            simulated: false
            remediation: true
            events_count: 1
            scenario_hash: some_hash
            scenario_version: "1.0"
  returns: ${{ steps.block_ip_address.result }}
