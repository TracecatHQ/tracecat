type: action
definition:
  title: Title
  description: Generate an informative title for given text using Ollama LLMs.
  display_group: Title
  doc_url: https://github.com/ollama/ollama/blob/main/README.md
  namespace: ollama.title
  name: title
  expects:
    input:
      type: str
      description: Content to generate a title for.
    input_context:
      type: str
      description: Type of content (e.g. "incident reports", "knowledge articles").
    max_length:
      type: int
      description: Maximum number of characters in the title.
      default: 60
  steps:
    - ref: generate_title
      action: llm.ollama.call
      args:
        model: gemma3:1b-it-q8_0
        prompt: |
          <content>
          ${{ inputs.input }}
          </content>
        system_prompt: |
          <scenario>
          You are creating a title for ${{ inputs.input_context }}.
          The title will be used for quick identification, categorization, and retrieval in a database or list view.
          Users will decide whether to click or investigate further based primarily on this title.
          </scenario>

          <reasoning>
          Reason through this step-by-step:
          1. What is the primary issue, event, or topic described? Be precise.
          2. Which specific systems, components, or entities are involved?
          3. What distinguishes this particular content from others of similar type?
          4. How can I convey the appropriate urgency or importance level?
          5. What terminology is most appropriate for the audience of ${{ inputs.input_context }}?
          </reasoning>

          <task>
          Based on your analysis, generate a clear, descriptive title in no more than ${{ inputs.max_length }} characters.
          The title must:
          - Begin with the most critical information
          - Use concrete, specific language instead of vague terms
          - Include key identifiers (e.g., system names, error codes) when relevant
          - Be immediately understandable without additional context
          - Follow standard title formatting for ${{ inputs.input_context }}
          </task>
        format:
          type: object
          properties:
            title:
              type: string
              description: Concise title within ${{ inputs.max_length }} characters.
          required:
            - title
          additionalProperties: false
          strict: true
    - ref: output
      action: core.transform.reshape
      args:
        value: ${{ FN.deserialize_json(steps.generate_title.result.message.content) }}
  returns: ${{ FN.lookup(steps.output.result, "title") }}
