type: action
definition:
  title: Send Teams buttons
  description: Send buttons/ActionSet as a thumbnail card to a Microsoft Teams channel.
  display_group: Microsoft Teams
  doc_url: https://learn.microsoft.com/en-us/graph/api/channel-post-messages
  namespace: tools.microsoft_teams
  name: send_buttons
  secrets:
    - type: oauth
      provider_id: microsoft_teams
      grant_type: authorization_code
  expects:
    team_id:
      type: str
      description: The ID of the team.
    channel_id:
      type: str
      description: The ID of the channel.
    action_set:
      type: dict[str, Any]
      description: ActionSet element with buttons/actions.
    title:
      type: str | None
      description: Title for the card.
      default: null
    subtitle:
      type: str | None
      description: Subtitle for the card.
      default: null
    text:
      type: str | None
      description: Text content for the button card.
      default: null
  steps:
    - ref: build_message
      action: core.script.run_python
      args:
        inputs:
          action_set: ${{ inputs.action_set }}
          title: ${{ inputs.title }}
          subtitle: ${{ inputs.subtitle }}
          text: ${{ inputs.text }}
        script: |
          import json
          import uuid

          def main(action_set, title, subtitle, text):
              # Convert ActionSet to thumbnail card buttons
              buttons = []
              if action_set.get("type") == "ActionSet":
                  actions = action_set.get("actions", [])
                  for action in actions:
                      if action.get("type") == "messageBack":
                          buttons.append({
                              "type": "messageBack",
                              "title": action.get("title"),
                              "text": action.get("text"),
                              "displayText": action.get("displayText"),
                              "value": action.get("value")
                          })
                      elif action.get("type") == "openUrl":
                          buttons.append({
                              "type": "openUrl",
                              "title": action.get("title"),
                              "url": action.get("url")
                          })

              # Build thumbnail card content
              card_content = {}
              if title:
                  card_content["title"] = title
              if subtitle:
                  card_content["subtitle"] = subtitle
              if text:
                  card_content["text"] = text
              if buttons:
                  card_content["buttons"] = buttons

              # Generate attachment ID
              attachment_id = str(uuid.uuid4()).replace("-", "")

              # Build payload
              return {
                  "body": {
                      "contentType": "html",
                      "content": f'<attachment id="{attachment_id}"></attachment>'
                  },
                  "attachments": [
                      {
                          "id": attachment_id,
                          "contentType": "application/vnd.microsoft.card.thumbnail",
                          "content": json.dumps(card_content)
                      }
                  ]
              }

    - ref: send_buttons
      action: core.http_request
      args:
        url: https://graph.microsoft.com/v1.0/teams/${{ inputs.team_id }}/channels/${{ inputs.channel_id }}/messages
        method: POST
        headers:
          Authorization: Bearer ${{ SECRETS.microsoft_teams_oauth.MICROSOFT_TEAMS_USER_TOKEN }}
          Content-Type: application/json
        payload: ${{ steps.build_message.result }}
  returns: ${{ steps.send_buttons.result.data }}
